diff --git a/config.def.h b/config.def.h
index 7054c06..874f500 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,5 +1,7 @@
 /* See LICENSE file for copyright and license details. */
 
+#include <X11/XF86keysym.h>
+
 /* appearance */
 static const char *fonts[] = {
 	"monospace:size=10"
@@ -17,16 +19,22 @@ static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = { "dev", "doc", "web", "app", "tmp"};
 
 static const Rule rules[] = {
 	/* xprop(1):
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class         instance    title      tags mask     isfloating   monitor */
+	{ "Evince",      NULL,       NULL,      1 << 1,       0,           -1 },
+	{ "qpdfview",    NULL,       NULL,      1 << 1,       0,           -1 },
+	{ "zathura",     NULL,       NULL,      1 << 1,       0,           -1 },
+	{ "libreoffice", NULL,       NULL,      1 << 1,       0,           -1 },
+	{ "GoldenDict",  NULL,       NULL,      1 << 3,       0,           -1 },
+	{ "Telegram",    NULL,       NULL,      1 << 3,       0,           -1 },
+	{ "Skype",       NULL,       NULL,      1 << 3,       0,           -1 },
+	{ "Spotify",     NULL,       NULL,      1 << 3,       0,           -1 },
 };
 
 /* layout(s) */
@@ -37,12 +45,11 @@ static const int resizehints = 1;    /* 1 means respect size hints in tiled resi
 static const Layout layouts[] = {
 	/* symbol     arrange function */
 	{ "[]=",      tile },    /* first entry is default */
-	{ "><>",      NULL },    /* no layout function means floating behavior */
 	{ "[M]",      monocle },
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -57,23 +64,42 @@ static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn()
 static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", normbgcolor, "-nf", normfgcolor, "-sb", selbgcolor, "-sf", selfgcolor, NULL };
 static const char *termcmd[]  = { "st", NULL };
 
+static const char *tmuxcmd[]   = { "st", "-e", "tmux", "new-session", "-At", "default", NULL };
+static const char *browsecmd[] = {"firefox",  NULL};
+static const char *editcmd[]   = {"emacsclient", "-c", NULL };
+
+static const char *lockcmd[]  = {"slock", NULL };
+static const char *volup[]         = { "pamixer", "-i", "3", NULL };
+static const char *voldown[]       = { "pamixer", "-d", "3", NULL };
+static const char *voltoggle[]     = { "pamixer", "-t", NULL };
+static const char *mictoggle[]     = { "pamixer", "--source", "alsa_input.pci-0000_00_1f.3.analog-stereo", "-t", NULL };
+static const char *mpcnext[]       = { "mpc", "next", NULL };
+static const char *mpcprev[]       = { "mpc", "prev", NULL };
+static const char *mpctoggle[]     = { "mpc", "toggle", NULL };
+
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_x,      spawn,          {.v = dmenucmd } },
+	{ MODKEY,                       XK_q,      spawn,          {.v = tmuxcmd } },
+	{ MODKEY,                       XK_w,      spawn,          {.v = browsecmd } },
+	{ MODKEY,                       XK_f,      spawn,          {.v = editcmd } },
+	{ MODKEY,                       XK_z,      spawn,          {.v = lockcmd } },
+	{ 0,         XF86XK_AudioRaiseVolume,      spawn,          {.v = volup} },
+	{ 0,         XF86XK_AudioLowerVolume,      spawn,          {.v = voldown} },
+	{ 0,                XF86XK_AudioMute,      spawn,          {.v = voltoggle} },
+	{ 0,             XF86XK_AudioMicMute,      spawn,          {.v = mictoggle} },	
+	{ 0,                XF86XK_AudioNext,      spawn,          {.v = mpcnext} },
+	{ 0,                XF86XK_AudioPrev,      spawn,          {.v = mpcprev} },
+	{ 0,                XF86XK_AudioPlay,      spawn,          {.v = mpctoggle} },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
-	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
+	{ MODKEY,                       XK_r,      focusstack,     {.i = +1 } },
+	{ MODKEY,                       XK_s,      focusstack,     {.i = -1 } },
+	{ MODKEY,                       XK_a,      incnmaster,     {.i = +1 } },
+	{ MODKEY,                       XK_t,      incnmaster,     {.i = -1 } },
+	{ MODKEY|ControlMask,           XK_a,      setmfact,       {.f = -0.05} },
+	{ MODKEY|ControlMask,           XK_t,      setmfact,       {.f = +0.05} },
 	{ MODKEY,                       XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
@@ -87,11 +113,8 @@ static Key keys[] = {
 	TAGKEYS(                        XK_3,                      2)
 	TAGKEYS(                        XK_4,                      3)
 	TAGKEYS(                        XK_5,                      4)
-	TAGKEYS(                        XK_6,                      5)
-	TAGKEYS(                        XK_7,                      6)
-	TAGKEYS(                        XK_8,                      7)
-	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },	
+	{ MODKEY|ShiftMask,             XK_z,      quit,           {0} },
 };
 
 /* button definitions */
